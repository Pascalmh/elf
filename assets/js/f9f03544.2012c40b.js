"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[49],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),i=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=i(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),f=i(n),d=a,m=f["".concat(c,".").concat(d)]||f[d]||p[d]||o;return n?r.createElement(m,s(s({ref:t},l),{},{components:n})):r.createElement(m,s({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=f;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:a,s[1]=u;for(var i=2;i<o;i++)s[i]=n[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7109:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return c},metadata:function(){return i},toc:function(){return l},default:function(){return f}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],u={},c="Data Source",i={unversionedId:"features/requests/requests-data-source",id:"features/requests/requests-data-source",isDocsHomePage:!1,title:"Data Source",description:"With the createRequestDataSource function, we can easily select the state of an async request from our store:",source:"@site/docs/features/requests/requests-data-source.mdx",sourceDirName:"features/requests",slug:"/features/requests/requests-data-source",permalink:"/elf/docs/features/requests/requests-data-source",editUrl:"https://github.com/ngneat/elf/docusaurus/edit/main/website/docs/features/requests/requests-data-source.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Cache",permalink:"/elf/docs/features/requests/requests-cache"},next:{title:"Pagination",permalink:"/elf/docs/features/pagination"}},l=[],p={toc:l};function f(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"data-source"},"Data Source"),(0,o.kt)("p",null,"With the ",(0,o.kt)("inlineCode",{parentName:"p"},"createRequestDataSource")," function, we can easily select the state of an async request from our store:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { createState, Store } from '@ngneat/elf';\nimport {\n  withRequestsStatus,\n  selectRequestStatus,\n  // highlight-next-line\n  createRequestDataSource,\n} from '@ngneat/elf-requests';\nimport { selectAll, withEntities } from '@ngneat/elf-entities';\n\nconst { state, config } = createState(\n  withEntities<Todo>(),\n  withRequestsStatus()\n);\n\nconst store = new Store({ state, config, name: '' });\n\nconst todos$ = store.pipe(selectAll());\nconst status$ = store.pipe(selectRequestStatus('todos'));\n\n// highlight-start\nexport const todosDataSource$ = createRequestDataSource({\n  data$: todos$,\n  status$,\n});\n// highlight-end\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"todosDataSource$")," will return an observable with the following type:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"{\n  data: Todo[];\n  loading: boolean;\n  error: unknown;\n}\n")),(0,o.kt)("p",null,"We can also pass the ",(0,o.kt)("inlineCode",{parentName:"p"},"dataKey")," option to change the default ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," property name:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export const todosDataSource$ = createRequestDataSource({\n  // highlight-next-line\n  dataKey: 'todos',\n  data$: todos$,\n  status$,\n});\n\n// Now the response will be typed as:\n{\n  // highlight-next-line\n  todos: Todo[];\n  loading: boolean;\n  error: unknown;\n}\n")))}f.isMDXComponent=!0}}]);