"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[674],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),f=p(n),m=a,d=f["".concat(l,".").concat(m)]||f[m]||c[m]||o;return n?r.createElement(d,s(s({ref:t},u),{},{components:n})):r.createElement(d,s({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1286:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return u},default:function(){return f}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],i={},l="Persist State",p={unversionedId:"features/persist-state",id:"features/persist-state",isDocsHomePage:!1,title:"Persist State",description:"The persistState() function gives you the ability to persist some of the app\u2019s state, by saving it to localStorage/sessionStorage or anything that implements the StorageEngine API, and restore it after a refresh.",source:"@site/docs/features/persist-state.md",sourceDirName:"features",slug:"/features/persist-state",permalink:"/elf/docs/features/persist-state",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/features/persist-state.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Pagination",permalink:"/elf/docs/features/pagination"},next:{title:"State History",permalink:"/elf/docs/features/history"}},u=[],c={toc:u};function f(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"persist-state"},"Persist State"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"persistState()")," function gives you the ability to persist some of the app\u2019s state, by saving it to ",(0,o.kt)("inlineCode",{parentName:"p"},"localStorage/sessionStorage")," or anything that implements the ",(0,o.kt)("inlineCode",{parentName:"p"},"StorageEngine")," API, and restore it after a refresh."),(0,o.kt)("p",null,"First, you need to install the package by using the CLI command or npm:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @ngneat/elf-persist-state\n")),(0,o.kt)("p",null,"To use it you should call the ",(0,o.kt)("inlineCode",{parentName:"p"},"persistState()")," function, passing the store and the options:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { Store, createState, withProps } from '@ngneat/elf';\nimport {\n  persistState,\n  useLocalStorage,\n  useSessionStorage,\n} from '@ngneat/elf-persist-state';\n\ninterface AuthProps {\n  user: { id: string } | null;\n}\n\nconst { state, config } = createState(withProps<AuthProps>({ user: null }));\n\nconst authStore = new Store({ state, name, config });\n\nclass AuthRepository {\n  private persist = persistState(authStore, {\n    key: 'auth',\n    storage: useLocalStorage,\n  });\n\n  user$ = authStore.pipe(select((state) => state.user));\n}\n")),(0,o.kt)("p",null,"As the second parameter you should pass a ",(0,o.kt)("inlineCode",{parentName:"p"},"Options")," object, which can be used to define the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"storage"),": an Object with ",(0,o.kt)("inlineCode",{parentName:"li"},"setItem"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"getItem")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"removeItem")," method for storing the state (required)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"source"),": a method that receives the store and return what to save from it (by default - the entire store)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"preStoreInit"),": a method that run upon initializing the store with a saved value, used for any required modifications before the value is set."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"key"),": the name under which the store state is saved (by default - the store name plus a ",(0,o.kt)("inlineCode",{parentName:"li"},"@store")," suffix).")),(0,o.kt)("p",null,"Elf also exposes the ",(0,o.kt)("inlineCode",{parentName:"p"},"initialized$")," observable. This observable emits after Elf initialized the stores based on the storage's value. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { persistState, useLocalStorage } from '@ngneat/elf-persist-state';\n\nconst instance = persistState(todoStore, {\n  key: 'todos',\n  storage: useLocalStorage,\n});\n\ninstance.initialized$.subscribe(console.log);\n")))}f.isMDXComponent=!0}}]);